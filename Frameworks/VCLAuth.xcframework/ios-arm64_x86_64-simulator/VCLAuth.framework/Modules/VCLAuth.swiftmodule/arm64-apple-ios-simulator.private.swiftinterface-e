// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VCLAuth
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import LocalAuthentication
import Swift
import UIKit
@_exported import VCLAuth
import _Concurrency
import _StringProcessing
public struct VCLAuthConfig {
  public init(title: Swift.String)
}
@_hasMissingDesignatedInitializers public class VclAuthProvider {
  public static func instance() -> any VCLAuth.VCLAuth
  @objc deinit
}
public protocol VCLAuth {
  func isAuthenticationAvailable(successHandler: @escaping (Swift.Bool) -> Swift.Void, errorHandler: @escaping (VCLAuth.VCLError) -> Swift.Void)
  func authenticate(authConfig: VCLAuth.VCLAuthConfig, successHandler: @escaping (Swift.Bool) -> Swift.Void, errorHandler: @escaping (VCLAuth.VCLError) -> Swift.Void)
  func openSecuritySettings(successHandler: @escaping (Swift.Bool) -> Swift.Void, errorHandler: @escaping (VCLAuth.VCLError) -> Swift.Void)
}
public enum VCLResult<Value> {
  case success(Value)
  case failure(VCLAuth.VCLError)
}
public struct VCLError : Swift.Error {
  public let code: Swift.Int?
  public let description: Swift.String
  public init(error: any Swift.Error, code: Swift.Int? = nil)
  public init(description: Swift.String, code: Swift.Int? = nil)
}
